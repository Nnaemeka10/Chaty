# Chat Application

A modern real-time chat application built with React and Node.js, featuring user authentication and real-time messaging capabilities.

## Features

- User authentication (login, signup, logout)
- Real-time messaging
- Modern and responsive UI built with React
- RESTful API backend
- Secure user sessions with JWT

## Tech Stack

### Frontend
- React 19
- Vite 7
- Modern ES Modules
- ESLint for code quality

### Backend
- Node.js with Express
- MongoDB with Mongoose
- JWT for authentication
- bcrypt for password hashing
- Cookie-based sessions

## Prerequisites

Before you begin, ensure you have the following installed:
- Node.js (Latest LTS version recommended)
- npm or yarn
- MongoDB (local installation or MongoDB Atlas account)

## Getting Started

### Backend Setup

1. Navigate to the backend directory:
   ```bash
   cd backend
   ```

2. Install dependencies:
   ```bash
   npm install
   ```

3. Create a .env file in the backend directory with the following variables:
   ```
   PORT=5000
   MONGODB_URI=your_mongodb_connection_string
   JWT_SECRET=your_jwt_secret
   ```

4. Start the development server:
   ```bash
   npm run dev
   ```

The backend server will start on http://localhost:5000

### Frontend Setup

1. Navigate to the frontend directory:
   ```bash
   cd frontend
   ```

2. Install dependencies:
   ```bash
   npm install
   ```

3. Start the development server:
   ```bash
   npm run dev
   ```

The frontend application will start on http://localhost:5173

## API Endpoints

### Authentication Routes
- `GET /api/auth/login` - User login
- `GET /api/auth/signup` - User registration
- `GET /api/auth/logout` - User logout

### Message Routes
- `GET /api/messages/send` - Send a message

## Development

### Available Scripts

Backend:
- `npm run dev` - Start the development server with hot-reload
- `npm start` - Start the production server

Frontend:
- `npm run dev` - Start the development server
- `npm run build` - Build for production
- `npm run lint` - Run ESLint
- `npm run preview` - Preview production build

## Contributing

1. Fork the repository
2. Create a new branch for your feature
3. Commit your changes
4. Push to your branch
5. Create a Pull Request

## License

This project is licensed under the ISC License.
